<?xml version="1.0" standalone="yes"?>

<!-- Generated by BEAUTi v1.10.5 Prerelease #23570d1                         -->
<!--       by Alexei J. Drummond, Andrew Rambaut and Marc A. Suchard         -->
<!--       Department of Computer Science, University of Auckland and        -->
<!--       Institute of Evolutionary Biology, University of Edinburgh        -->
<!--       David Geffen School of Medicine, University of California, Los Angeles-->
<!--       http://beast.community/                                           -->
<beast version="1.10.5">


	<!-- The list of taxa to be analysed (can also include dates/ages).          -->
	<!-- ntax={{ taxon_count }}                                                  -->
	<taxa id="taxa">
		{% for taxon in taxa.values() %}
		<taxon id="{{ taxon.id }}">
			<date value="{{ taxon.date }}" direction="forwards" units="years"/>
			<attr name="Location">
				{{ taxon.state }}
			</attr>
		</taxon>
		{% endfor %}
	</taxa>

	<!-- START Discrete Traits Model                                             -->

	<!-- general data type for discrete trait model, 'Location'                  -->
	<generalDataType id="Location.dataType">
        <!-- Number Of States = {{ states|length }}                                                   -->
		{% for state in states.values() %}<state code="{{ state.id }}"/>
		{% endfor %}
	</generalDataType>


	<!-- Data pattern for discrete trait, 'Location'                             -->
	<attributePatterns id="Location.pattern" attribute="Location">
		<taxa idref="taxa"/>
		<generalDataType idref="Location.dataType"/>
	</attributePatterns>

	<empiricalTreeDistributionModel id="treeModel" fileName="2022-11-17_exponential_fixed.combined.trees">
		<taxa idref="taxa"/>
	</empiricalTreeDistributionModel>
	<statistic id="treeModel.currentTree" name="Current Tree">
		<empiricalTreeDistributionModel idref="treeModel"/>
	</statistic>

	<!-- END Discrete Traits Model                                               -->

	<!-- The strict clock (Uniform rates across branches)                        -->
	<strictClockBranchRates id="Location.branchRates">
		<rate>
			<parameter id="Location.clock.rate" value="1.0" lower="0.0"/>
		</rate>
	</strictClockBranchRates>

	<rateStatistic id="Location.meanRate" name="Location.meanRate" mode="mean" internal="true" external="true">
		<empiricalTreeDistributionModel idref="treeModel"/>
		<strictClockBranchRates idref="Location.branchRates"/>
	</rateStatistic>

	<!-- START Discrete Traits Model                                             -->

	<!-- symmetric CTMC model for discrete state reconstructions                 -->
	<generalSubstitutionModel id="Location.model">
		<generalDataType idref="Location.dataType"/>
		<frequencies>
			<frequencyModel id="Location.frequencyModel" normalize="true">
				<generalDataType idref="Location.dataType"/>
				<frequencies>
					<parameter id="Location.frequencies" dimension="{{ states|length }}"/>
				</frequencies>
			</frequencyModel>
		</frequencies>

		<!-- rates and indicators                                                    -->
		<rates>
			<parameter id="Location.rates" dimension="{{ (state_rates / 2) | int }}" value="1.0" lower="0.0"/>
		</rates>
		<rateIndicator>
			<parameter id="Location.indicators" dimension="{{ (state_rates / 2) | int }}" value="1.0"/>
		</rateIndicator>
	</generalSubstitutionModel>
	<sumStatistic id="Location.nonZeroRates" elementwise="true">
		<parameter idref="Location.indicators"/>
	</sumStatistic>
	<productStatistic id="Location.actualRates" elementwise="false">
		<parameter idref="Location.indicators"/>
		<parameter idref="Location.rates"/>
	</productStatistic>
	<siteModel id="Location.siteModel">
		<substitutionModel>
			<generalSubstitutionModel idref="Location.model"/>
		</substitutionModel>
	</siteModel>

	<!-- Likelihood for tree given discrete trait data                           -->
	<markovJumpsTreeLikelihood id="Location.treeLikelihood" stateTagName="Location.states" useUniformization="true" saveCompleteHistory="true" logCompleteHistory="true">
		<attributePatterns idref="Location.pattern"/>
		<!-- <treeModel idref="treeModel"/> -->
		<empiricalTreeDistributionModel idref="treeModel"/>
		<siteModel idref="Location.siteModel"/>
		<generalSubstitutionModel idref="Location.model"/>
		<generalSubstitutionModel idref="Location.model"/>
		<strictClockBranchRates idref="Location.branchRates"/>
		<rewards>
			{% for state in states.values() %}<parameter id="{{ state.id }}_reward"  value="{{ state.reward|join(' ') }}" />
			{% endfor %}
		</rewards>

	</markovJumpsTreeLikelihood>

	<!-- END Discrete Traits Model                                               -->


	<!-- Define operators                                                        -->
	<operators id="operators" optimizationSchedule="power">
		<scaleOperator scaleFactor="0.75" weight="3">
			<parameter idref="Location.clock.rate"/>
		</scaleOperator>
		<scaleOperator scaleFactor="0.75" weight="15" scaleAllIndependently="true">
			<parameter idref="Location.rates"/>
		</scaleOperator>
		<bitFlipOperator weight="7">
			<parameter idref="Location.indicators"/>
		</bitFlipOperator>
		<empiricalTreeDistributionOperator weight="1">
			<empiricalTreeDistributionModel idref="treeModel"/>
		</empiricalTreeDistributionOperator>
	</operators>


	<!-- Define MCMC                                                             -->
	<mcmc id="mcmc" chainLength="{{ chain_length }}" autoOptimize="true" operatorAnalysis="{{ stem }}.ops">
		<joint id="joint">
			<prior id="prior">
				<ctmcScalePrior>
					<ctmcScale>
						<parameter idref="Location.clock.rate"/>
					</ctmcScale>
					<empiricalTreeDistributionModel idref="treeModel"/>
				</ctmcScalePrior>
				<poissonPrior mean="{{ states|length }}" offset="0.0">
					<statistic idref="Location.nonZeroRates"/>
				</poissonPrior>
				<uniformPrior lower="0.0" upper="1.0">
					<parameter idref="Location.frequencies"/>
				</uniformPrior>
				<cachedPrior>
					<gammaPrior shape="1.0" scale="1.0" offset="0.0">
						<parameter idref="Location.rates"/>
					</gammaPrior>
					<parameter idref="Location.rates"/>
				</cachedPrior>
				<!-- <coalescentLikelihood idref="coalescent"/> -->

				<!-- <strictClockBranchRates idref="default.branchRates"/> -->
				<strictClockBranchRates idref="Location.branchRates"/>

				<!-- START Discrete Traits Model                                             -->
				<generalSubstitutionModel idref="Location.model"/>

				<!-- END Discrete Traits Model                                               -->

			</prior>
			<likelihood id="likelihood">
				<!-- <treeDataLikelihood idref="default.treeLikelihood"/> -->

				<!-- START Discrete Traits Model                                             -->
				<markovJumpsTreeLikelihood idref="Location.treeLikelihood"/>

				<!-- END Discrete Traits Model                                               -->

			</likelihood>
		</joint>
		<operators idref="operators"/>

		<!-- write log to screen                                                     -->
		<log id="screenLog" logEvery="{{ log_screen }}">
			<column label="Joint" dp="4" width="12">
				<joint idref="joint"/>
			</column>
			<column label="Prior" dp="4" width="12">
				<prior idref="prior"/>
			</column>
			<column label="Likelihood" dp="4" width="12">
				<likelihood idref="likelihood"/>
			</column>
			<column label="currentTree" dp="4" width="12">
			  <statistic idref="treeModel.currentTree"/>
			</column>
			<column label="Location.clock.rate" sf="6" width="12">
				<parameter idref="Location.clock.rate"/>
			</column>

			<!-- START Discrete Traits Model                                             -->
			<column label="Location.nonZeroRates" dp="0" width="6">
				<sumStatistic idref="Location.nonZeroRates"/>
			</column>

			<!-- END Discrete Traits Model                                               -->

		</log>

		<!-- write log to file                                                       -->
		<log id="fileLog" logEvery="{{ log_every }}" fileName="{{ stem }}.log" overwrite="false">
			<joint idref="joint"/>
			<prior idref="prior"/>
			<likelihood idref="likelihood"/>
			<parameter idref="Location.clock.rate"/>
			<rateStatistic idref="Location.meanRate"/>
			<statistic idref="treeModel.currentTree"/>

			<!-- START Discrete Traits Model                                             -->
			<parameter idref="Location.rates"/>
			<parameter idref="Location.indicators"/>
			<sumStatistic idref="Location.nonZeroRates"/>

			<!-- END Discrete Traits Model                                               -->

			<strictClockBranchRates idref="Location.branchRates"/>

			<!-- START Discrete Traits Model                                             -->
			<markovJumpsTreeLikelihood idref="Location.treeLikelihood"/>

			<!-- END Discrete Traits Model                                               -->

		</log>

		<!-- START Discrete Traits Model                                             -->
		<log id="{{ stem }}.LocationrateMatrixLog" logEvery="{{ log_every }}" fileName="{{ stem }}.Location.rates.log">
			<parameter idref="Location.rates"/>
			<parameter idref="Location.indicators"/>
			<sumStatistic idref="Location.nonZeroRates"/>
		</log>

		<!-- END Discrete Traits Model                                               -->


		<!-- write tree log to file                                                  -->
		<logTree id="treeFileLog" logEvery="{{ log_every }}" nexusFormat="true" fileName="{{ stem }}.trees" sortTranslationTable="true">
		  <empiricalTreeDistributionModel idref="treeModel"/>
			<trait name="rate" tag="Location.rate">
				<strictClockBranchRates idref="Location.branchRates"/>
			</trait>
			<joint idref="joint"/>

			<!-- START Ancestral state reconstruction                                    -->
			<trait name="Location.states" tag="Location">
			  <markovJumpsTreeLikelihood idref="Location.treeLikelihood"/>
			</trait>

			<!-- END Ancestral state reconstruction                                      -->

		</logTree>

		<!-- START Ancestral state reconstruction                                    -->

		<!-- write complete history tree log to file                                 -->
		<logTree logEvery="{{ log_every }}" nexusFormat="true" fileName="{{ stem }}.Location.history.trees" sortTranslationTable="true">
		  <empiricalTreeDistributionModel idref="treeModel"/>
			<markovJumpsTreeLikelihood idref="Location.treeLikelihood"/>
		</logTree>

		<!-- END Ancestral state reconstruction                                      -->
		<log id="completeJumpHistory" logEvery="{{ log_every }}" fileName="{{ stem }}.Location.jumpHistory.log">
		  <completeHistoryLogger>
		    <markovJumpsTreeLikelihood idref="Location.treeLikelihood"/>
		  </completeHistoryLogger>
		</log>
	</mcmc>

	<report>
		<property name="timer">
			<mcmc idref="mcmc"/>
		</property>
	</report>

</beast>
